★CSS

(캔슬이 많이 생기면 안돼)

-body에 style이 열리면 css가 됨(인라인스타일,인라인css)
-태그를 바라봄, 
{} : 한개만 넣을 수 없을 때, 객체, 한번에 여러개의 태그를 잡을 때, 배열 
() : 괄호안에 재료를 넣어서 활용을 할 때
-헤드안에있는건 (이너타입) 이라고 함
-파일 순서에 따라 표현되는게 달라짐

-태그에 . 을 쓰면 class가 됨
-css에 불러올 때 대소문자 처리하고 .(클래스) 불러오면 됨
class같은 이름으로 통제하기 위해 씀
-태그가 같아지면 선택하기 까다로워짐

태그들은 기본적으로 css를 가지고 태어남

-margin 간격
-기본적으로 8픽셀을 가지고 태어남
-css는 !수치!가 중요함
-em : 자신과 가장 인접한 거리에 있는 폰트사이즈
-다수에게 한번에 지시를 내릴 수 있다

-webfont
cdn/cli : localfont/ dev : localfont(psd : font's...)

cli -> cdn <-dev
     <-

dns : domail.com

-thin - 100(폰트별 표기 방식이 상이) / extralight - 200(폰트별 표기 방식이 상이) / 
light - 300 / regular - 400 / medeium - 500 / semibold - 600 / bold - 700 / 
extrabold - 800 / black - 900

f12눌러서 
Rendered Fonts
Noto Sans KR Thin—(Network resource(4 glyphs)) -> 네트워크로 되어있는지 확인 하고 퍼블시작하기

-폰트사이즈가 30보다 작을 때 줄간을 폰트사이즈+6px
-rgb+a-> a : 투명도 - 100%를 1로 봄

-w->whithe-space : 문자처리방법
nomal : 자동줄바꿈
no+wrap : 감싸지않은
wrap : 감싼

-nowrap 일 때는 추가적으로 더 붙어야 사용 가능함(대체로 자동 줄바꿈이 되도록 웹을 만드니까)
-overflow : 넘쳐, 어떠한 것이든 넘어가는 걸 막아줌
-말줄임일 때 white-space, text-overflow, overflow는 세트로 써야 돼
-라인하이트line-height : 는 수직정렬에 응용해서 씀, 폰트사이즈는 폰트의 높이를 기준으로 말함 

-v vertical-align버티컬얼라인 : 수직정렬, 높이값이 큰 애한테만 속성값주면 작은애들이 알아서 맞춰짐, 상세하게 조정해야되면 작은 애한테 줘야 돼, 어디에있느냐에따라 %가 달라짐, 단, 범위를 측정할 수 없는 곳에선 

vertical-align (수직정렬)
 * 1. display: inline, inline-block인 애들끼리만.
 * 2. 높은 애를 기준으로 preset(ex > top, middle, bottom....)
 * 3. 작은 애가 높은 애를 기준으로 움직임.
 * 4. 작은 애에게 상대적 수치 (%)를 이용하여 나머지 부분을 더 움직일 수 있다.
 ! 작은애의 높이 를 기준으로 100%를 잡고, 양수일경우 위로, 음수일경우 아래로. 

-글자크기를 주지 않았을 때의 기본 폰트 사이즈 : 16px = 1em
-디스플레이가 <블럭이 아닌 애들>만 수직정렬할 수 있음!
블럭인 애들은 위에서 아래로 떨어지는 속성이 있으니까 

input-인라인블럭
img-인라인블럭
span-인라인

-text-indent : 들여쓰기, 웹을 만들 때 들여쓰기는 p자체의 문단을 들여쓰기해서 indent로 쓰진 않음
응용(-9999px)

-none : 극도의 부정! 렌더초자 하지 않는다, 실직적으로 다시 전환하려면 반대의 속성명(기본값)을 알아야 됨(되돌리는 법도 알아야 하니까)(hidden도 부정의 개념, 감추는 개념)

-text-transform : 대소문자, 글자변경
-lowercase : 소문자
-capitalize : 대문자(앞자의 단어에)
-uppercase : 모든 글자 대문자

-text-align : 부모가 자손한테 주는거, 글자는 원래 정렬이 되는게 맞는데 공간차제가 인라인인거는 text-align가능

-transparent : 투명하게


▷배경의 기본 속성

-패턴 : 이라는건 한 조각이 있을 때 한 조각에 플러스 한조각이면 (상중하/좌중우/대각선) 로 바라봤을 때 패턴이 반복이 일어나면 패턴이 됨 (o)
-패턴 각도 : repeat은 기본값, x/y/no

이미지는 너비(종횡비)기준
-배경은 패턴을 가지고 태어남
-배경사이즈를 100%로 맞추면 y축으로 패턴이미지가 생김
-이미지의 기본 위치는 !왼쪽 상단!
url에 이미지 쓸 땐 url('../images/----') ''를 꼭 써야 돼
-배경이미지에 ,를 쓰면 다중이미지로 바뀜(레이어처럼 무제한으로 쌓을 수 있음)
-css는 값을 돌려씀, 하나만 쓰면 서로가 공유함, 동일한 값을 두번써야하면 한번만써도 알아먹음
-background image : cover -> 커버는 무조건 꽉 채우고 보는거(오른쪽에서 왼쪽으로), 작은 이미지여도 무조건 꽉 채움
-background image : contain -> 컨테인은 먼저 닿는걸 기준으로 함, 100%로의 의미와 완전 다름!(횡종비)

-background-position : 치수 가능(-%) 0px 0px -> 앞은 x축, 뒤는 y축

-스크롤은 움직이는데 배경은 가만히 냅두고 싶으면 
background-attachment: fixed -> 디폴트는 스크롤임
-배경이미지를 넣고도 배경 색을 넣고 싶으면 숏핸드 맨맨맨맨맨 뒤에다가 쓰면 돼
-배경이미지는 이미지를 쓰면쓸순록 이미지가 뒤로 배치됨

▷sprite
-양수 음수 잘 따져서 픽셀값 넣기 

리스트들의 불릿바꾸기(ul, ol)

-이미지로 불릿을 넣을 수 있음
-url 같은 색이 보이면 그건 !함수!임 -> 기능! -> 기능 신행식은 이름 <괄호열고 괄호닫고 세미콜론 ('');> 이 무조건!
-불릿 이미지를 넣고 움직이고 싶으면 리스트스타일포지션으로 위치를 옮기기 힘듦, inside, outside하면 리스트 전체가 움직이기 때문에 안 씀

-웹은 방향을 얘기하면 시계방향을 얘기함 top-right-bottom-left 순
-하나만 적용했을땐 사방에 다 들어가

★방향과 관련된 css는 상하/좌우 를 동시에 묶는 적용하는 성향이 있음

-input, fieldset은 테두리를 가지고 태어나니까 방향별로 쓰면 되는거고
원래부터 없는 테두리는 숏핸드로?
-outline은 지우는게 아니지만(색약이나 시각장애인은 구별을 못함)

-radiusBox 모서리 깎는 방법
-line-height

★
-padding : 부모가 자손에게 자신의 경계에 닿지 않게 밀어내는 간격을 칭함
-margin : 부모를 제외한 자손끼리 닿지 않게 밀어내는 간격을 칭함

padding -> 100px에 30패딩을 넣으면 너비가 130이 됨 위에다 입는거니까 부모가 밀어냄 부모한테 보더가있으면 패딩을 써야되는 분명한 상황, 어디서부터 어디까지가 부모인지 처리하는게 다양함, 막 쓰면 부작용이 생김, 
부모가 자손을 밀어내는 행위를 패딩이라고 하는거야, li들에 마진이 아닌 패딩을 주면 부작용이 생김, 검사했을 때 주황색으로 나오는게 마진임, 패딩으로 보면 중앙정렬이 힘들어, 

margin도 하나만 넣어도 사방으로 들어가, 마진을 사용하면 부모를 미는 용도가 아닌데
!예외로 body는 괜찮음!

마진은 같은 방향에서 만나면 마진이 상쇄됨, 마진을 다 넣어버리면 둘중에 큰 숫자로 하나만 들어가거나 똑같아지거나/ 상하->하, 좌우->좌 를 쓰는게 마진을 사용할 때 효과가 더 좋고 헷갈리지 않음, 

padding은 같은 방향에서 만나면 증가됨
글자한테는 마진바텀을 할 수 없음
패딩이랑 보더의 값을 올리니까 div의 값이 늘어나는걸 box-sizing: border-box; -> 안으로 삼켜라->컨텐츠박스의 너비는 줄어들고 박스 크기는 그대로로 됨

글자를 센터를 하려면 text-aline을 쓰면되고
글자를 블럭으로 보는 방법->margin: 0 auto; -> auto자동, 
중앙공식 : (전체너비 - 대상너비)/2 ->left:1 / right:1
우측공식 : (전체너비-대상너비 -> left: all)

너비 패딩이 %면 border와의 연산이 어려우니까 boxsizing을 쓰는게 좋아

calc 단위를 연산할수잇는 함수가 있음 근데 수업중에는 쓰지않을거야 써큘레이터 계산기  퍼센테이지 픽셀단위에선 쓸 필요없고 유동성단위를 할 때는 ㄱㄱ, 단위가 같은것도 연산할수있는데 단위게 다를 때 써야하고, 연산 대상을 넣어주면 되는데 연산자하고 반드시 띄어쓰기를 해야 돼

★float
block만 사용 가능
1. 공간 = display: block; -> width 100%; 좌우를 차지하는 성향(자신외 아무것도 안둠)
2.web = 공간들의 배치-> 상하 보다는 좌중우가 많다-> 위 1번 조건과 상충
3.해결방안

-1. float : img옆에 text를 붙히기 위해 태어난 태그(공간을 무너뜨리는 성향이 있음 블럭인 애를 블럭이 아니도록 해줌)기존 block을 무효화, 좌우 서로의 높이가 다를 경우 layout이 무너진다((좌우만 계산해서 열로 배치))

-2. grid : float의 단점인 높이가 틀릴 경우 layout이 무너지는 현상을 효율적으로 관리, column으로 화면을 바라보기 때문에 좡의 변형 능력이 떨어짐(타일형식의 레이아웃)

-3. flex : 위 두 단점 뿐만이 아니라 기존 공간배치의 어려움을 모두 쉽게 바꿔낼 수 있다(세부설정 및 조정 자체의 난이도가 굉장히 높은편)

너비를 100으로 맞춰놔야돼 모든 수치의 100%
------------------------------------------------------------------------------------------

반응형은 adaptive->responsive 화면 크기가 자유자제로 적응을 하면서 화면에 맞춘다는건데 반응단계에서 높은 효율을 가짐

((블럭인애들은 혼자 공간을 쓰려는게 강함, 위에서 아래로 떨어지는 모양이 나오는데 실제 웹은 그렇게 구축이 안되는게 많음, 배치를 하는건 3개가있음, float부작용이 심함, 장단점을 가지고있음,)) 

보더와 패딩은 ~을 할수잇고 마진은 그럴수잇다 에..?
인라인블럭은 옆에 누구를 둬야 함
float는 나머지애들도 다 블럭을 깨버림

-float해제하는 방법 clear: both
-after은 후이..?맨 밑을 짚는 선택자 -> content는 지정된 위치에다가 원래 없었던 애를 넣어주는거야, 구조화에서 없던걸 만들어주는거지, 엠티스트링? 문자기는 한데 아무것도 없는거야, 디스플레이는 블럭이 되면 공간을 100프로를 잡아, 
그럼 after는 부모와 자손을 끊기위함인가..?

float하나를 기준으로 하나를 감싸는 형태, 각각의 박스를 float해야함
부모의 높이값이 망가지니까 :after쓰는거임

li는 display가 list-item; 블럭이 아님 불릿을 가지고있음 리스트아이템때문에 불릿이 나타나느거임
display를 블럭으로 바꿔도 불릿이 사라지겠지 목록이긴 한데 불릿이 없어야되면 리스트스타일로 하고 리스트가 아니라면 블럭으로 바꾸기 그럼 불릿 없어짐
border가 들어가면 너비가 살찜, 

float:right는 출력방식이 오른쪽부터 1번이 되는거임

float를 하게되면 무조건 너비를 해줘야 돼
          는 부모 너비를 해야되니까 

옆으로 붙이는게 float만 있는게 아님

코드칠때는 어디서부터 시작해서 어디서 끝나는지 알아야 돼
display block은 와이드값 100%됨

★position
-공간은 0이라는 레벨에 있어야하는데 원하는대로 배치할수있는 방법
-좌표로 위치를 찍어(px) x/y축으로 해야대, 면이니까 엑스축이 좌우, 와이축은 상하 이건 알지

-포지션의 종류 : r, a, f

1. 릴레이티브relative(상대적) : 부여되는 순간에는 0레벨임,포지션인데 포지션이 아닌거처럼 있음, 일반 블럭처럼 가만히 있다가 좌표를 주면 그때부터 뜸, 근데 상대적이니까 내가 현재 있는 곳을 기준으로 삼음, 이미 마진을 줬어도 릴레이티브를 쓰면 자기 위치를 기준으로 다시 뜸! 릴레이티브가 부모역할

릴레이티브는 좌표를 줘야 떠

2. absolute앱솔루트(절대적) : 절대적임/앱솔루트 주는 순간 바로 뜸(위로), 절대좌표를 기준으로 움직임(절대좌표=화면의 좌측 상단), !적용되는 순간 너비를 상실함! 앱솔루트는 릴레이티브와 같이 있을 땐 절대좌표를 릴레이티브로 됨->앱솔루트는 부모따라가, 릴레이티브안에 앱솔루트를 가둘 수 있다, 

앱솔루트는 릴레이티브에만 존속되는거임

3. fixed : 고정한다, 적용하는 순간 바로 뜸(위로), !적용되는 순간 너비를 상실함! 너비를 다시 줘야 돼, 기준점은 무조건 브라우저기준(왼쪽 상단), !fixed는 스크롤의 적용을 받지 않음! ex)header

앱솔루트가 픽스에 고정좌표로 할 수 있음
픽스 안에서 앱소루트 주면 픽스 안에서 움직여

픽스를 쓰면 너비를 상실하니까 width 100% 무조건 필요

-겹치는 순서는 맨 아래가 젤 위에있음!
-z축 우선 순위를 바꿔주는 속성 = z-index: ;(4단계로 기준 세워서 하기->4단계가 안딘다면 다시 기준 세우든가)
기준을 세우면 쉽게 가능-> 숫자가 큰 순서대로 겹치는 순서를 바꿀 수 있음
기준:보통 헤더가 1, 팝업이 10, 더 우선순위는 100 -> 이 순서

-overflow-y:scroll 하면 내부안에서 스크롤을 만듦
스크롤을 만들어야하면 제한값이 있어야 돼->height 로 공간 제한을 둬야 해
0레벨에 해당하는 블럭들도 하이트걸고 스크롤하면 상하스크롤 만듦
                                           와이드걸고 overflow-x 하면 좌우스크롤 만듦

데스크탑에서는 일부를 스크롤 만드는걸 선호하지 않기

body는 그 상태 그대로 건들지않기

-스티키는 위로 뜨는게 안돼 (위로 뜰때는 포지션이 적용이 안된상태 일반 블럭처럼 올라가)

스크롤의 위치를 나라태는건 스크롤 탑이라고하는데 스크롤탑은 스크롤의 윗선의 위치로 하는거임

▷!class는 단순 css조정으로 쓰는건 안되는거임!

-가운데라는 개념 마진0auto:상하마진 0
텍스트가 길어서 줄바꿈이 일어날거같으면 라인하이트 쓰면 안돼 -> 그럴땐 padding으로 대체!
float(block)는 버티컬라인도 안돼(버티컬라인은 inline, inline-block)
-앱솔루트는 릴레이티브 필요

★form은 css를 절대 쓰면 안돼!

input, textarea 등 기능 수행 input은 : dispaly inline-block
img, video

inline-block : 옆으로 붙는 애
-폰트는 6.7777px까지밖에 안줄어(5px를 줘도 6.7777로 됨)

-input은 내가 준 px보다 더 많은 크기를 가짐, 입력을 받거나 수행을 해야돼서 입력성이 있음, 최소한의 크기를 보장받을 수 있게 함

-바깥은 px쓰고 안에선 %쓰는 의미가 없움
-%계산할 때 가운데를 일단 나누고(50), 거기서 또 반을 나누면(25){오차가 몇 있겠지만}

-포지션으로 레이아웃 자체를 하면은 안돼 원래

-radio checkbox는 (뭘 쓰려고 했더라)

-enabled/disabled -> 디스에이블은 특정 영역을 먼저 입력해야 구현이 가능할 때 넣었다가 뺏다가 하는 거임, 입력조차 불가능함. 인에이블은 적혀있기는 한데 수정이 안되는 ex) id 

★가상선택자 
: -child = 부모기준으로 바라보는 자손의 순서 ex) ul이 바라보는 li들에서
: -of-type = 자손들끼리의 순서
-nth : n번째 / n 경우의 수
-짝수는 (2n)으로 쓰면 됨
-홀수의 조건 - 짝수의 최소수 2로 나눈 나머지가 1이 발생되는 모든 수

- data-page : page attr로 지정한거임
data- : attr을 마음대로 지정할 수 있다 ->( - )뒤엔  속성이 됨
(-) 사용자 임의 속성


-반응선택자 : 클릭드래그(복사를 하기 위함)를 했을 때 어떻게 표현할것인가 / 잘 사용하지 않음(임의로 건들면 안돼)

-부정선택자 : 괄호안에 대상을 제외한 나머지 대상 / 부정의 대상은 무제한으로 가능 / 무제한으로 되어있긴 하지만 두개정도만 쓰는게 가능 적합함 / 유일하게 제외 라는 의미를 가진 선택자


body에는 마진 8px이 있음!!

css에서 띄어쓰기는 <안에> 라는 뜻임
> 직계선택자

<처음 공부할 때 예제와 같이 교본을 만들어서 가지고 있으면 언제든지 인터넷을 안 찾아봐도 알 수 있음>

규격을 정할때
max-width 커지긴커지는데 이 맥스 보다는 커지는데
min-width 줄어들기는하는데 내가 지정한 숫자 이하로는 줄어들지 마

접근성을 따르지만 textarea는 ...? 꺼버리기 resize 

table은 반응/적응형이 안돼

포지션을 쓰면 붕 뜬다고 했어 부모와 있는 자손은 붕뜬거랑 산관이 없음 그러면 줄바꿈이 될수있게 패딩을 줌 앱솔루트의 떠있는 부분을


듀레이션 : 지속 시간임 / 조건 : 숫자여야돼, 문자로 주고받는 값은 트렌지션에 들어가지않고 패딩 마진 포지션좌표 너비 높이 글자사이즈 라인하이트 이런것들은 드렌지션의 대상에 들어갈 수 있다. 

트레지션엔 left0 right0 이 적용이 안돼 왼쪽0에서 오른쪽 0으로 가고싶으면 100에서 너비%빼면 돼











